plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'com.github.johnrengelman.shadow' version '8.1.1'
	id 'maven-publish'
	id 'org.springframework.boot.experimental.thin-launcher' version "1.0.31.RELEASE"
}

group = 'wirklich.xyz'
version = '1.0.0'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
	mavenLocal()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springCloudVersion', "2023.0.0-M1")
}

assemble.dependsOn = [thinJar, shadowJar]

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

publishing {
	publications {
		maven(MavenPublication) {
			from components.java
			versionMapping {
				usage('java-api') {
					fromResolutionOf('runtimeClasspath')
				}
				usage('java-runtime') {
					fromResolutionResult()
				}
			}
		}
	}
}

shadowJar.mustRunAfter thinJar

import com.github.jengelman.gradle.plugins.shadow.transformers.*

//task awsJar(type: Jar) {
//  manifest {
//    attributes (
//		'Start-Class': 'xyz.wirklich.duomo.DuomoApplication',
////  		'Main-Class': 'org.springframework.boot.loader.wrapper.ThinJarWrapper',
//	  	'Main-Class': 'org.springframework.boot.loader.JarLauncher'
//	)
//  }
//}

shadowJar {
	//include 'spring.*'
	archiveClassifier = 'aws'
	//include "org.springframework.boot.loader.wrapper.ThinJarWrapper"
//	dependencies {
//?		'org.springframework.boot.experimental:spring-boot-thin-launcher:1.0.30.RELEASE'
//		exclude(
//				dependency ("org.springframework.cloud:spring-cloud-function-web))
//	}
	manifest {
		inheritFrom(project.tasks.thinJar.manifest)
	}
	// Required for Spring
	mergeServiceFiles()
	append 'META-INF/spring.handlers'
	append 'META-INF/spring.schemas'
	append 'META-INF/spring.tooling'
	append 'META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports'
	append 'META-INF/spring/org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration.imports'
	transform(PropertiesFileTransformer) {
		paths = ['META-INF/spring.factories']
		mergeStrategy = "append"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.cloud:spring-cloud-function-adapter-aws'
	implementation 'org.springframework.cloud:spring-cloud-function-context'
//	compile ("org.springframework.cloud:spring-cloud-function-adapter-aws:${version}")
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'xyz.wirklich.astro:astro-time:1.0.5'
	implementation 'xyz.wirklich.astro:astro-sun:1.0.5'
//	developmentOnly 'org.springframework.boot:spring-boot-devtools'
//	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'xyz.wirklich.astro:astro-time:1.0.5'
//	testImplementation 'xyz.wirklich.astro:astro-sun:1.0.5'
	implementation 'com.amazonaws.serverless:aws-serverless-java-container-springboot3:2.0.0-M2'
//	annotationProcessor 'org.springframework:spring-context-indexer:6.0.11'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.2'
	testImplementation 'org.hamcrest:hamcrest:2.2'

	//shadow 'org.springframework.boot.experimental:spring-boot-thin-launcher:1.0.30.RELEASE'
	//shadow 'org.springframework.boot.experimental:spring-boot-thin-wrapper:1.0.30.RELEASE'
	//shadow 'org.springframework.boot.experimental:spring-boot-thin-wrapper:1.0.30.RELEASE'
	implementation 'org.springframework.boot.experimental:spring-boot-thin-wrapper:1.0.30.RELEASE'

	testImplementation 'com.amazonaws.serverless:aws-serverless-java-container-core:1.9.1'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
